
name: 6 f Merge to A4 JPG

on:
  workflow_dispatch:

jobs:
  pdf-merger:
    runs-on: ubuntu-latest
    env:
      SOURCE_DIR: ${{ secrets.PRIVATE_DIR }}/3查找
      OUTPUT_DIR: ${{ secrets.PRIVATE_DIR }}/4拼接PDF

    steps:
      - name: Checkout private repo
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.PRIVATE_REPO }}
          token: ${{ secrets.PAT }}
          path: private-repo
          ref: main

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libjpeg-dev zlib1g-dev
          pip install Pillow reportlab

      - name: Prepare workspace
        run: |
          cd private-repo
          mkdir -p "$OUTPUT_DIR"
          echo "开始拼接PDF" > merge.log

      - name: Merge images to A4 PDF
        run: |
          cd private-repo
          python3 <<EOF
          import os
          import math
          from PIL import Image
          from reportlab.pdfgen import canvas
          from reportlab.lib.pagesizes import A4
          from reportlab.lib.utils import ImageReader
          import re

          # 配置参数
          A4_WIDTH, A4_HEIGHT = A4
          MM_TO_POINT = 2.83465
          PAGE_WIDTH = A4_WIDTH * MM_TO_POINT
          PAGE_HEIGHT = A4_HEIGHT * MM_TO_POINT
          SECTION_HEIGHT = PAGE_HEIGHT / 3
          MARGIN = 10

          # 获取排序后的文件列表
          def natural_sort_key(s):
              return [int(text) if text.isdigit() else text.lower()
                      for text in re.split(r'(\d+)', os.path.basename(s))]

          all_files = []
          for root, _, files in os.walk(os.getenv("SOURCE_DIR")):
              for f in files:
                  if f.lower().endswith('.jpg'):  # 修改为查找 .jpg 文件
                      all_files.append(os.path.join(root, f))
          all_files.sort(key=natural_sort_key)

          # 创建PDF
          output_path = os.path.join(os.getenv("OUTPUT_DIR"), "merged.pdf")
          c = canvas.Canvas(output_path, pagesize=(PAGE_WIDTH, PAGE_HEIGHT))

          # 分页逻辑
          for i in range(0, len(all_files)):
              # 每3个图片开始新页（除第一页外）
              if i % 3 == 0 and i != 0:
                  c.showPage()
              
              # 获取当前section索引（0-2）
              section = i % 3
              img_path = all_files[i]
              
              try:
                  img = Image.open(img_path)
                  img_reader = ImageReader(img)
                  
                  # 计算缩放
                  img_width, img_height = img.size
                  target_width = PAGE_WIDTH - 2*MARGIN
                  target_height = SECTION_HEIGHT - 2*MARGIN
                  scale = min(target_width/img_width, target_height/img_height)
                  new_width = img_width * scale
                  new_height = img_height * scale
                  
                  # 计算位置
                  x = (PAGE_WIDTH - new_width)/2
                  y = PAGE_HEIGHT - (section+1)*SECTION_HEIGHT + (SECTION_HEIGHT - new_height)/2
                  
                  c.drawImage(img_reader, x, y, new_width, new_height)
              except Exception as e:
                  print(f"处理失败：{img_path} - {str(e)}")
              
              # 补充当前页的空白区域
              if (i == len(all_files)-1) and (section < 2):
                  for s in range(section+1, 3):
                      c.setStrokeColorRGB(0.8, 0.8, 0.8)
                      c.setLineWidth(0.5)
                      y_pos = PAGE_HEIGHT - (s+1)*SECTION_HEIGHT
                      c.rect(MARGIN, y_pos + MARGIN, 
                            PAGE_WIDTH - 2*MARGIN, SECTION_HEIGHT - 2*MARGIN)

          # 保存PDF
          c.save()
          EOF

      - name: Commit results
        run: |
          cd private-repo
          git config user.email "pdf-merger@auto"
          git config user.name "PDF Merger"

          # 生成版本号
          timestamp=$(date +%Y%m%d%H%M%S)
          commit_msg="Auto: 生成拼接PDF（v$timestamp）"

          git add "$OUTPUT_DIR"
          git commit -m "$commit_msg"
          git push "https://x-access-token:${{ secrets.PAT }}@github.com/${{ secrets.PRIVATE_REPO }}.git" main
