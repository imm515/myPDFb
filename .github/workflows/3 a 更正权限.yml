name: 3 a Process PDF and Commit

on:
  workflow_dispatch:

jobs:
  process-pdf:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout public repo
        uses: actions/checkout@v4

      - name: Checkout private repo
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.PRIVATE_REPO }}
          token: ${{ secrets.PAT }}
          path: private-repo
          ref: main

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y poppler-utils python3-pip
          pip3 install pdf2image pillow

      - name: Clean 1cut directory
        run: |
          OUTPUT_DIR="private-repo/${{ secrets.PRIVATE_DIR }}/1cut"
          if [ -d "$OUTPUT_DIR" ]; then
            rm -rf "$OUTPUT_DIR"/*
          else
            mkdir -p "$OUTPUT_DIR"
          fi

      - name: List PDF files in private repo
        run: |
          find private-repo/${{ secrets.PRIVATE_DIR }} -name "*.pdf" | sort > pdf_files.txt

      - name: Process PDF files and cut pages into three parts
        run: |
          # 初始化输出目录
          OUTPUT_DIR="private-repo/${{ secrets.PRIVATE_DIR }}/1cut"
          mkdir -p "$OUTPUT_DIR"
      
          # 安全读取文件列表（处理含空格路径）
          mapfile -d '' pdf_files < <(find "private-repo/${{ secrets.PRIVATE_DIR }}" -name "*.pdf" -print0 | sort -z)
      
          echo "Found ${#pdf_files[@]} PDF files:"
          printf '  - %s\n' "${pdf_files[@]}"
      
          for pdf_path in "${pdf_files[@]}"; do
              filename=$(basename "$pdf_path")
              echo "Processing: $filename"
              
              PDF_PATH="$pdf_path" OUTPUT_DIR="$OUTPUT_DIR" python3 <<EOF
          from pdf2image import convert_from_path
          import os
          from PIL import Image
      
          pdf_path = os.getenv("PDF_PATH")
          output_dir = os.getenv("OUTPUT_DIR")
          base_name = os.path.splitext(os.path.basename(pdf_path))[0]
      
          images = convert_from_path(pdf_path, dpi=150)
          
          for page_num, img in enumerate(images, 1):
              # 保存完整页面
              full_page = os.path.join(output_dir, f"{base_name}_p{page_num}.png")
              img.save(full_page, "PNG")
              
              # 切割三部分
              w, h = img.size
              for part_num, (part_name, (x0, y0, x1, y1)) in enumerate([
                  ("1top", (0, 0, w, h//3)),
                  ("2mid", (0, h//3, w, h*2//3)),
                  ("3bot", (0, h*2//3, w, h))
              ], 1):
                  crop = img.crop((x0, y0, x1, y1))
                  crop.save(f"{output_dir}/{base_name}_p{page_num}_{part_name}.png")
          EOF
          done

      - name: Commit and push to private repo
        run: |
          cd private-repo
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
          git add .
          git commit -m "Auto: Processed PDF images"
          git push "https://x-access-token:${{ secrets.PAT }}@github.com/${{ secrets.PRIVATE_REPO }}.git" main
