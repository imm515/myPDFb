name: 3F PDF Processing

on:
  workflow_dispatch:

jobs:
  process-pdf:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repositories
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.PRIVATE_REPO }}
          token: ${{ secrets.PAT }}
          path: private-repo

      - name: Setup environment
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip ghostscript
          pip3 install PyMuPDF

      - name: Clean output directory
        run: |
          OUTPUT_DIR="$GITHUB_WORKSPACE/private-repo/${{ secrets.PRIVATE_DIR }}/1cut"
          # 安全清理目录内容
          if [ -d "$OUTPUT_DIR" ]; then
              find "$OUTPUT_DIR" -mindepth 1 -delete
              echo "已清理目录内容：$OUTPUT_DIR"
          else
              mkdir -p "$OUTPUT_DIR"
              echo "创建新目录：$OUTPUT_DIR"
          fi
          # 确保目录可写
          sudo chmod -R 777 "$OUTPUT_DIR"

      - name: Process PDFs
        run: |
          OUTPUT_DIR="$GITHUB_WORKSPACE/private-repo/${{ secrets.PRIVATE_DIR }}/1cut"

          cat << 'EOF' > process_pdf.py
          import fitz, os, sys, subprocess

          def sanitize_pdf(input_path, output_path, crop_box):
              """使用Ghostscript物理裁剪PDF"""
              cmd = [
                  'gs',
                  '-q',  # 静默模式
                  '-o', output_path,
                  '-sDEVICE=pdfwrite',
                  '-dPDFSETTINGS=/prepress',
                  '-c', f'[/CropBox [{crop_box.x0} {crop_box.y0} {crop_box.x1} {crop_box.y1}] /PAGES pdfmark',
                  '-f', input_path
              ]
              subprocess.run(cmd, check=True)

          def split_pdf(pdf_path, output_dir):
              doc = fitz.open(pdf_path)
              base = os.path.splitext(os.path.basename(pdf_path))[0]
              
              for pg in range(len(doc)):
                  page = doc[pg]
                  media_box = page.mediabox
                  width, height = media_box.x1, media_box.y1

                  for part in ["1top", "2mid", "3bot"]:
                      if part == "1top":
                          crop = fitz.Rect(0, 0, width, height/3)
                      elif part == "2mid":
                          crop = fitz.Rect(0, height/3, width, 2*height/3)
                      else:
                          crop = fitz.Rect(0, 2*height/3, width, height)

                      # 生成文件名
                      final_name = f"{base}_p{pg+1}_{part}"
                      temp_pdf = f"{output_dir}/temp_{final_name}.pdf"
                      final_pdf = f"{output_dir}/{final_name}.pdf"
                      txt_file = f"{output_dir}/{final_name}.txt"
                      
                      try:
                          # 第一步：用PyMuPDF裁剪
                          new_doc = fitz.open()
                          new_doc.insert_pdf(doc, from_page=pg, to_page=pg)
                          new_page = new_doc[0]
                          new_page.set_cropbox(crop)
                          new_doc.save(temp_pdf)
                          new_doc.close()

                          # 第二步：用Ghostscript物理裁剪
                          sanitize_pdf(temp_pdf, final_pdf, crop)
                          
                          # 文本提取
                          page = fitz.open(final_pdf)[0]
                          text = page.get_text()
                          with open(txt_file, "w", encoding="utf-8") as f:
                              f.write(text.strip())
                          
                      finally:
                          # 清理临时文件
                          if os.path.exists(temp_pdf):
                              os.remove(temp_pdf)

          if __name__ == "__main__":
              if len(sys.argv) != 3:
                  print("Usage: python process_pdf.py <input_pdf> <output_dir>")
                  sys.exit(1)
              split_pdf(sys.argv[1], sys.argv[2])
          EOF

          # 处理所有PDF文件
          find "private-repo/${{ secrets.PRIVATE_DIR }}" -name "*.pdf" -print0 | while IFS= read -r -d $'\0' file; do
              echo "正在处理: $file"
              python3 process_pdf.py "$file" "$OUTPUT_DIR"
          done

      - name: Commit changes
        run: |
          cd private-repo
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add .
          git status  # 查看变更状态
          git commit -m "自动处理PDF更新 [$(date +'%Y%m%d-%H%M%S')]"
          git push "https://${{ secrets.PAT }}@github.com/${{ secrets.PRIVATE_REPO }}.git"
