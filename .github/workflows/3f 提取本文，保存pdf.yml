name: 3F PDF Processing

on:
  workflow_dispatch:

jobs:
  process-pdf:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repositories
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.PRIVATE_REPO }}
          token: ${{ secrets.PAT }}
          path: private-repo

      - name: Setup environment
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip ghostscript
          pip3 install PyMuPDF

      - name: Create output directory
        run: |
          OUTPUT_DIR="$GITHUB_WORKSPACE/private-repo/${{ secrets.PRIVATE_DIR }}/1cut"
          mkdir -p "$OUTPUT_DIR"

      - name: Process PDFs
        run: |
          OUTPUT_DIR="$GITHUB_WORKSPACE/private-repo/${{ secrets.PRIVATE_DIR }}/1cut"

          cat << 'EOF' > process_pdf.py
          import fitz, os, sys, subprocess

          def sanitize_pdf(input_path, output_path, crop_box):
              """使用Ghostscript物理裁剪PDF"""
              cmd = [
                  'gs',
                  '-o', output_path,
                  '-sDEVICE=pdfwrite',
                  '-dPDFSETTINGS=/prepress',
                  '-c', f'[/CropBox [{crop_box.x0} {crop_box.y0} {crop_box.x1} {crop_box.y1}] /PAGES pdfmark',
                  '-f', input_path
              ]
              subprocess.run(cmd, check=True)

          def split_pdf(pdf_path, output_dir):
              doc = fitz.open(pdf_path)
              base = os.path.splitext(os.path.basename(pdf_path))[0]
              
              for pg in range(len(doc)):
                  page = doc[pg]
                  media_box = page.mediabox
                  width, height = media_box.x1, media_box.y1

                  for part in ["1top", "2mid", "3bot"]:
                      if part == "1top":
                          crop = fitz.Rect(0, 0, width, height/3)
                      elif part == "2mid":
                          crop = fitz.Rect(0, height/3, width, 2*height/3)
                      else:
                          crop = fitz.Rect(0, 2*height/3, width, height)

                      # 生成临时文件名
                      temp_pdf = f"{output_dir}/temp_{base}_p{pg+1}_{part}.pdf"
                      final_pdf = f"{output_dir}/{base}_p{pg+1}_{part}.pdf"
                      
                      # 第一步：用PyMuPDF裁剪
                      new_doc = fitz.open()
                      new_doc.insert_pdf(doc, from_page=pg, to_page=pg)
                      new_page = new_doc[0]
                      new_page.set_cropbox(crop)
                      new_doc.save(temp_pdf)
                      new_doc.close()

                      # 第二步：用Ghostscript物理裁剪
                      sanitize_pdf(temp_pdf, final_pdf, crop)
                      os.remove(temp_pdf)  # 删除临时文件

                      # 文本提取保持不变...
                      # [此处保留原有文本提取代码]

          if __name__ == "__main__":
              if len(sys.argv) != 3:
                  print("Usage: python process_pdf.py <input_pdf> <output_dir>")
                  sys.exit(1)
              split_pdf(sys.argv[1], sys.argv[2])
          EOF

          # 处理PDF文件
          find "private-repo/${{ secrets.PRIVATE_DIR }}" -name "*.pdf" -print0 | while IFS= read -r -d $'\0' file; do
              echo "Processing: $file"
              python3 process_pdf.py "$file" "$OUTPUT_DIR"
          done

      - name: Commit changes
        run: |
          cd private-repo
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add .
          git commit -m "安全裁剪PDF更新"
          git push "https://${{ secrets.PAT }}@github.com/${{ secrets.PRIVATE_REPO }}.git"
