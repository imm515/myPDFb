name: 3a 裁剪测试

on:
  workflow_dispatch:

jobs:
  process-pdf:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout public repo
        uses: actions/checkout@v4

      - name: Checkout private repo
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.PRIVATE_REPO }}
          token: ${{ secrets.PAT }}
          path: private-repo
          ref: main

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y poppler-utils python3-pip
          pip3 install pdf2image pillow PyPDF2

      - name: Clean 1cut directory
        run: |
          OUTPUT_DIR="private-repo/${{ secrets.PRIVATE_DIR }}/1cut"
          if [ -d "$OUTPUT_DIR" ]; then
            rm -rf "$OUTPUT_DIR"/*
          else
            mkdir -p "$OUTPUT_DIR"
          fi

      - name: List PDF files in private repo
        run: |
          find private-repo/${{ secrets.PRIVATE_DIR }} -name "*.pdf" | sort > pdf_files.txt

      - name: Process PDF files and cut pages into three parts (retain PDF format)
        run: |
          # 初始化输出目录
          OUTPUT_DIR="private-repo/${{ secrets.PRIVATE_DIR }}/1cut"
          mkdir -p "$OUTPUT_DIR"

          # 安全读取文件列表（处理含空格路径）
          mapfile -d '' pdf_files < <(find "private-repo/${{ secrets.PRIVATE_DIR }}" -name "*.pdf" -print0 | sort -z)

          echo "Found ${#pdf_files[@]} PDF files:"
          printf '  - %s\n' "${pdf_files[@]}"

          for pdf_path in "${pdf_files[@]}"; do
              filename=$(basename "$pdf_path")
              echo "Processing: $filename"

              PDF_PATH="$pdf_path" OUTPUT_DIR="$OUTPUT_DIR" python3 <<EOF
          from PyPDF2 import PdfReader, PdfWriter
          import os

          pdf_path = os.getenv("PDF_PATH")
          output_dir = os.getenv("OUTPUT_DIR")
          base_name = os.path.splitext(os.path.basename(pdf_path))[0]

          reader = PdfReader(pdf_path)
          for page_num, page in enumerate(reader.pages, 1):
              # 获取页面尺寸
              media_box = page.mediabox
              width = float(media_box.width)
              height = float(media_box.height)

              # 切割三部分
              for part_num, (part_name, (y0, y1)) in enumerate([
                  ("1top", (height * 2/3, height)),
                  ("2mid", (height * 1/3, height * 2/3)),
                  ("3bot", (0, height * 1/3))
              ], 1):
                  writer = PdfWriter()
                  new_page = page.copy()
                  new_page.mediabox.upper_right = (width, y1)
                  new_page.mediabox.lower_left = (0, y0)
                  writer.add_page(new_page)

                  # 保存切割后的PDF
                  output_path = f"{output_dir}/{base_name}_p{page_num}_{part_name}.pdf"
                  with open(output_path, "wb") as output_pdf:
                      writer.write(output_pdf)
          EOF
          done

      - name: Commit and push to private repo
        run: |
          cd private-repo
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
          git add .
          git commit -m "Auto: Processed PDF images"
          git push "https://x-access-token:${{ secrets.PAT }}@github.com/${{ secrets.PRIVATE_REPO }}.git" main
